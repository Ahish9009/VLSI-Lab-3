
// Generated by Cadence Genus(TM) Synthesis Solution 16.21-s018_1
// Generated on: Sep 29 2019 20:14:58 IST (Sep 29 2019 14:44:58 UTC)

// Verification Directory fv/ripple16bit 

module fulladder1bit(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (C0), .B (B), .CI (A), .CO (C1), .S (S));
endmodule

module fulladder1bit_1(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_2(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_3(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module ripple4bit(C0, A, B, S, Cout);
  input C0;
  input [3:0] A, B;
  output [3:0] S;
  output Cout;
  wire C0;
  wire [3:0] A, B;
  wire [3:0] S;
  wire Cout;
  wire C1, C2, C3;
  fulladder1bit A1(C0, A[0], B[0], S[0], C1);
  fulladder1bit_1 A2(C1, A[1], B[1], S[1], C2);
  fulladder1bit_2 A3(C2, A[2], B[2], S[2], C3);
  fulladder1bit_3 A4(C3, A[3], B[3], S[3], Cout);
endmodule

module fulladder1bit_4(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_5(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_6(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_7(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module ripple4bit_1(C0, A, B, S, Cout);
  input C0;
  input [3:0] A, B;
  output [3:0] S;
  output Cout;
  wire C0;
  wire [3:0] A, B;
  wire [3:0] S;
  wire Cout;
  wire C1, C2, C3;
  fulladder1bit_4 A1(.C0 (C0), .A (A[0]), .B (B[0]), .S (S[0]), .C1
       (C1));
  fulladder1bit_5 A2(.C0 (C1), .A (A[1]), .B (B[1]), .S (S[1]), .C1
       (C2));
  fulladder1bit_6 A3(.C0 (C2), .A (A[2]), .B (B[2]), .S (S[2]), .C1
       (C3));
  fulladder1bit_7 A4(.C0 (C3), .A (A[3]), .B (B[3]), .S (S[3]), .C1
       (Cout));
endmodule

module fulladder1bit_8(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_9(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_10(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_11(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module ripple4bit_2(C0, A, B, S, Cout);
  input C0;
  input [3:0] A, B;
  output [3:0] S;
  output Cout;
  wire C0;
  wire [3:0] A, B;
  wire [3:0] S;
  wire Cout;
  wire C1, C2, C3;
  fulladder1bit_8 A1(.C0 (C0), .A (A[0]), .B (B[0]), .S (S[0]), .C1
       (C1));
  fulladder1bit_9 A2(.C0 (C1), .A (A[1]), .B (B[1]), .S (S[1]), .C1
       (C2));
  fulladder1bit_10 A3(.C0 (C2), .A (A[2]), .B (B[2]), .S (S[2]), .C1
       (C3));
  fulladder1bit_11 A4(.C0 (C3), .A (A[3]), .B (B[3]), .S (S[3]), .C1
       (Cout));
endmodule

module fulladder1bit_12(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_13(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_14(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module fulladder1bit_15(C0, A, B, S, C1);
  input C0, A, B;
  output S, C1;
  wire C0, A, B;
  wire S, C1;
  ADDFX1 g2(.A (B), .B (A), .CI (C0), .CO (C1), .S (S));
endmodule

module ripple4bit_3(C0, A, B, S, Cout);
  input C0;
  input [3:0] A, B;
  output [3:0] S;
  output Cout;
  wire C0;
  wire [3:0] A, B;
  wire [3:0] S;
  wire Cout;
  wire C1, C2, C3;
  fulladder1bit_12 A1(.C0 (C0), .A (A[0]), .B (B[0]), .S (S[0]), .C1
       (C1));
  fulladder1bit_13 A2(.C0 (C1), .A (A[1]), .B (B[1]), .S (S[1]), .C1
       (C2));
  fulladder1bit_14 A3(.C0 (C2), .A (A[2]), .B (B[2]), .S (S[2]), .C1
       (C3));
  fulladder1bit_15 A4(.C0 (C3), .A (A[3]), .B (B[3]), .S (S[3]), .C1
       (Cout));
endmodule

module ripple16bit(c_in, a, b, c_out, s);
  input c_in;
  input [15:0] a, b;
  output c_out;
  output [15:0] s;
  wire c_in;
  wire [15:0] a, b;
  wire c_out;
  wire [15:0] s;
  wire c5, c9, c13;
  ripple4bit A1(c_in, a[3:0], b[3:0], s[3:0], c5);
  ripple4bit_1 A2(c5, a[7:4], b[7:4], s[7:4], c9);
  ripple4bit_2 A3(c9, a[11:8], b[11:8], s[11:8], c13);
  ripple4bit_3 A4(c13, a[15:12], b[15:12], s[15:12], c_out);
endmodule

